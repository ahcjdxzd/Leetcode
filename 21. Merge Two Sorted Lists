Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2){
    // new a list l3 as the output
    struct ListNode*l3=NULL;
    // l1 is the node on the l1, l2 is the node on l2
    // compare l1 l2
    if(l1 == NULL && l2 !=NULL) return l2;
    if(l2 == NULL && l1 !=NULL) return l1;
    if(l1 == NULL && l2 == NULL) return l3;
    
    // if l1 <= l2, then the node l3 = l1, and then compare l1->next with l2
    if(l1->val <= l2->val){
        l3=l1;
        l3->next = mergeTwoLists(l1->next,l2);
    }else{
        l3=l2;
        l3->next = mergeTwoLists(l1,l2->next);
    }
    return l3;
}


  
   
        
  
