Leetcode

Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

Example 1:

Input: 1->2->3->3->4->4->5
Output: 1->2->5
Example 2:

Input: 1->1->1->2->3
Output: 2->3

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* deleteDuplicates(struct ListNode* head){
    if (!head || !(head->next)) return head;
        struct ListNode* current = head->next;
    
        if (current->val != head->val) {
            
            head->next = deleteDuplicates(current);
            /*head is not same as next node so take the head out*/
            return head;
        }
        /*if head is same as next node, we need to find the last same node,use while*/
        else {
            while (current && current->val == head->val) current = current->next;
            /*when we find the last same node, those node we visited are useless,so we just take the list from current node to recursive*/
            return deleteDuplicates(current);
        }
    
}

